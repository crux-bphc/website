---
import GithubIcon from "../../../public/github.svg?raw";
import InstagramIcon from "../../../public/instagram.svg?raw";
import LinkedInIcon from "../../../public/linkedin.svg?raw";
import CodeforcesIcon from "../../../public/codeforces.svg?raw";
import MailIcon from "../../../public/mail.svg?raw";
import Avatar from "../../components/Avatar.astro";
import Badge from "../../components/Badge.astro";
import Footer from "../../components/Footer.astro";
import Navbar from "../../components/Navbar.astro";
import Layout from "../../layouts/Layout.astro";
import data from "../../data/data.json";
import Logo from "../../../public/logoMainPage.svg?raw";

export async function getStaticPaths() {
  const iconMap = {
    github: GithubIcon,
    linkedin: LinkedInIcon,
    instagram: InstagramIcon,
    codeforces: CodeforcesIcon,
    email: MailIcon,
  };

  return data.map(
    ({
      username,
      name,
      title,
      text,
      socials,
      avatar,
      website,
      highlightedBadges,
      badges,
    }) => {
      return {
        params: { username },
        props: {
          name,
          title,
          text,
          socials: socials.map((social) => {
            return {
              link: social.link,
              icon: iconMap[social.name as keyof typeof iconMap] as string,
            };
          }),
          avatar,
          website,
          highlightedBadges,
          badges,
        },
      };
    },
  );
}

const {
  name,
  title,
  text,
  socials,
  avatar,
  website,
  highlightedBadges,
  badges,
} = Astro.props;
---

<Layout title=`${name}`>
  <div class="fixed -bottom-24 -right-24 z-0 flex opacity-40 blur">
    <div
      class="size-64 text-foreground-bright opacity-45 md:size-72 lg:size-96"
    >
      <Fragment set:html={Logo} />
    </div>
  </div>
  <main id="main" class="h-dvh bg-background pb-28">
    <Navbar />
    <div class="flex h-full w-full flex-col items-center lg:pt-12 xl:pt-16">
      <button
        onclick="history.back();"
        class="material-symbols-rounded absolute left-8 top-24 h-fit text-3xl font-bold text-foreground-muted transition-colors duration-200 hover:text-foreground sm:text-4xl md:left-20 md:top-36 lg:left-16 lg:top-36 xl:left-20 xl:top-40"
        >arrow_back</button
      >
      <div
        class="flex w-full justify-center pt-20 md:pt-36 lg:p-20 lg:pt-40 xl:w-2/3 xl:px-0 xl:pt-36"
      >
        <div
          class="flex w-full flex-col items-center px-4 md:px-4 lg:w-1/2 lg:items-start"
        >
          <Avatar
            imageURL={avatar}
            style="lg:size-48 size-36 md:mb-6 mb-2 lg:hidden"
          />
          <span
            class="text-2xl font-bold text-foreground-bright md:text-3xl lg:text-4xl"
            >{name}</span
          >
          <span
            class="text-xl font-semibold text-orange md:text-2xl lg:pb-4 lg:text-2xl"
            >{title}</span
          >
          <div
            class=`flex w-full flex-col items-center py-6 ${text.length >0 ? "sm:flex-row": ""} lg:hidden ${website && website.length > 0 ? "justify-between" : "justify-center"}`
          >
            <div class="flex w-fit flex-wrap justify-center">
              {
                highlightedBadges.map((badge) => (
                  <Badge
                    style="bg-orange text-orange-foreground mx-1 my-1"
                    text={badge}
                  />
                ))
              }
              {
                badges.map((badge) => (
                  <Badge
                    style="bg-orange text-orange-foreground mx-1 my-1"
                    text={badge}
                  />
                ))
              }
            </div>
            {
              website && website.length > 0 && (
                <a class="text-orange hover:underline" href={website}>
                  {website}
                </a>
              )
            }
          </div>
          <p
            class="w-full text-base text-foreground-bright md:text-lg lg:text-xl"
          >
            <Fragment set:html={text} />
          </p>
          <div
            class=`flex w-full lg:space-x-10 sm:space-x-8 space-x-6 pt-8 lg:pr-10 ${ text.length > 0 ? "justify-end": "lg:justify-start justify-center"}`
          >
            {
              socials.map((social) => (
                <a
                  href={social.link}
                  target="_blank"
                  class="size-6 sm:size-8 md:size-8 lg:size-10"
                >
                  <div class="size-6 rounded-full fill-foreground-muted transition duration-200 ease-in-out hover:fill-orange sm:size-8 md:size-8 lg:size-10">
                    <Fragment
                      set:html={social.icon}
                      class="text-foreground-muted"
                    />
                  </div>
                </a>
              ))
            }
          </div>
        </div>
        <div class="hidden w-fit flex-col items-center pl-12 lg:flex xl:pl-16">
          <Avatar
            imageURL={avatar}
            style="lg:size-48 size-36 hidden lg:block"
          />
          <div class="flex w-fit flex-wrap pt-4 lg:justify-center">
            {
              highlightedBadges.map((badge) => (
                <Badge
                  style="bg-orange text-orange-foreground mx-1 my-1"
                  text={badge}
                />
              ))
            }
            {
              badges.map((badge) => (
                <Badge
                  style="bg-orange text-orange-foreground mx-1 my-1"
                  text={badge}
                />
              ))
            }
          </div>
          <a class="mt-8 text-orange hover:underline" href={website}
            >{website}</a
          >
        </div>
      </div>
      <Footer />
    </div>
  </main>
</Layout>
